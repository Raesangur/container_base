{
  "version": "2.1.0",
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.4.json",
  "runs": [
    {
      "results": [
        {
          "ruleId": "C26432",
          "message": {
            "text": "If you define or delete any default operation in the type 'class pel::iterator_base<int>', define or delete them all (c.21)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 14,
                  "endLine": 40,
                  "endColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/testContainer.hpp"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 9,
                  "endLine": 68,
                  "endColumn": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/testContainer.hpp"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 9,
                  "endLine": 62,
                  "endColumn": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/testContainer.hpp"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 9,
                  "endLine": 33,
                  "endColumn": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/testContainer.hpp"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 9,
                  "endLine": 27,
                  "endColumn": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26443",
          "message": {
            "text": "Overriding destructor should not use explicit 'override' or 'virtual' specifiers (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/testContainer.hpp"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 6,
                  "endLine": 19,
                  "endColumn": 6
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26432",
          "message": {
            "text": "If you define or delete any default operation in the type 'class pel::testContainer<int>', define or delete them all (c.21)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/testContainer.hpp"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 6,
                  "endLine": 19,
                  "endColumn": 6
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26455",
          "message": {
            "text": "Default constructor may not throw. Declare it 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/testContainer.hpp"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 5,
                  "endLine": 17,
                  "endColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'pel::iterator_base<int>::iterator_base<int>' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 5,
                  "endLine": 42,
                  "endColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26432",
          "message": {
            "text": "If you define or delete any default operation in the type 'class pel::container_base<int>', define or delete them all (c.21)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/container_base.h"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 14,
                  "endLine": 23,
                  "endColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26436",
          "message": {
            "text": "The type 'class pel::container_base<int>' with a virtual function needs either public virtual or protected non-virtual destructor (c.35)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/container_base.h"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 14,
                  "endLine": 23,
                  "endColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 27,
                  "endLine": 164,
                  "endColumn": 43
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 27,
                  "endLine": 164,
                  "endColumn": 48
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26486",
          "message": {
            "text": "Don't pass a pointer that may be invalid to a function. Parameter 0 'temp' in call to 'pel::iterator_base<int>::iterator_base<int>' may be invalid (lifetime.3)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 5,
                  "endLine": 180,
                  "endColumn": 12
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "index": 0,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 178,
                            "startColumn": 23
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26487",
          "message": {
            "text": "Don't return a pointer '(*this)' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 23,
                  "endLine": 178,
                  "endColumn": 26
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "index": 0,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 178,
                            "startColumn": 23
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26487",
          "message": {
            "text": "Don't return a pointer '(*(return value))' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 23,
                  "endLine": 178,
                  "endColumn": 26
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "index": 0,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 178,
                            "startColumn": 23
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "index": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 180,
                            "startColumn": 5
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'pel::iterator_base<int>::operator++' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 26,
                  "endLine": 176,
                  "endColumn": 26
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 5,
                  "endLine": 179,
                  "endColumn": 10
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26487",
          "message": {
            "text": "Don't return a pointer '(*this)' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 26,
                  "endLine": 169,
                  "endColumn": 26
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "index": 0,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 169,
                            "startColumn": 26
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "index": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 172,
                            "startColumn": 5
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26487",
          "message": {
            "text": "Don't return a pointer '(*(return value))' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 26,
                  "endLine": 169,
                  "endColumn": 26
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "index": 0,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 169,
                            "startColumn": 26
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "index": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 172,
                            "startColumn": 5
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'pel::iterator_base<int>::operator++' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 26,
                  "endLine": 169,
                  "endColumn": 26
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 5,
                  "endLine": 171,
                  "endColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26487",
          "message": {
            "text": "Don't return a pointer '(*this)' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 26,
                  "endLine": 185,
                  "endColumn": 26
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "index": 0,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 185,
                            "startColumn": 26
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "index": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 188,
                            "startColumn": 5
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26487",
          "message": {
            "text": "Don't return a pointer '(*(return value))' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 26,
                  "endLine": 185,
                  "endColumn": 26
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "index": 0,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 185,
                            "startColumn": 26
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "index": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 188,
                            "startColumn": 5
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'pel::iterator_base<int>::operator+=' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 26,
                  "endLine": 185,
                  "endColumn": 26
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 5,
                  "endLine": 187,
                  "endColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 27,
                  "endLine": 195,
                  "endColumn": 43
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 27,
                  "endLine": 195,
                  "endColumn": 48
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26486",
          "message": {
            "text": "Don't pass a pointer that may be invalid to a function. Parameter 0 'temp' in call to 'pel::iterator_base<int>::iterator_base<int>' may be invalid (lifetime.3)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 5,
                  "endLine": 211,
                  "endColumn": 12
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "index": 0,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 209,
                            "startColumn": 18
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26487",
          "message": {
            "text": "Don't return a pointer '(*this)' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 18,
                  "endLine": 209,
                  "endColumn": 26
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "index": 0,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 209,
                            "startColumn": 18
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26487",
          "message": {
            "text": "Don't return a pointer '(*(return value))' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 18,
                  "endLine": 209,
                  "endColumn": 26
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "index": 0,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 209,
                            "startColumn": 18
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "index": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 211,
                            "startColumn": 5
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'pel::iterator_base<int>::operator--' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 26,
                  "endLine": 207,
                  "endColumn": 26
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 5,
                  "endLine": 210,
                  "endColumn": 10
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26487",
          "message": {
            "text": "Don't return a pointer '(*this)' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 26,
                  "endLine": 200,
                  "endColumn": 26
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "index": 0,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 200,
                            "startColumn": 26
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "index": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 203,
                            "startColumn": 5
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26487",
          "message": {
            "text": "Don't return a pointer '(*(return value))' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 26,
                  "endLine": 200,
                  "endColumn": 26
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "index": 0,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 200,
                            "startColumn": 26
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "index": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 203,
                            "startColumn": 5
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'pel::iterator_base<int>::operator--' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 26,
                  "endLine": 200,
                  "endColumn": 26
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 5,
                  "endLine": 202,
                  "endColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26487",
          "message": {
            "text": "Don't return a pointer '(*this)' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 26,
                  "endLine": 215,
                  "endColumn": 26
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "index": 0,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 215,
                            "startColumn": 26
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "index": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 218,
                            "startColumn": 5
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26487",
          "message": {
            "text": "Don't return a pointer '(*(return value))' that may be invalid (lifetime.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 26,
                  "endLine": 215,
                  "endColumn": 26
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "index": 0,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 215,
                            "startColumn": 26
                          }
                        }
                      },
                      "importance": "important"
                    },
                    {
                      "index": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                          },
                          "region": {
                            "startLine": 218,
                            "startColumn": 5
                          }
                        }
                      },
                      "importance": "important"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'pel::iterator_base<int>::operator-=' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 26,
                  "endLine": 215,
                  "endColumn": 26
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///E:/GitHub/container_base/iterator_base.h"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 5,
                  "endLine": 217,
                  "endColumn": 14
                }
              }
            }
          ]
        }
      ],
      "tool": {
        "driver": {
          "name": "PREfast",
          "fullName": "PREfast Code Analysis",
          "version": "14.25.28610.4"
        }
      },
      "invocations": [
        {
          "commandLine": "\"M:\\VisualStudio 2019\\VC\\Tools\\MSVC\\14.25.28610\\bin\\HostX86\\x86\\c1xx.dll\" -ACf{1F7B090C-16DB-4822-966A-A93D26ED4681} -ACpmspft140.dll -Alint -D_PREFAST_ -D_AST_FE_ -Analyze -zm0x001031A0 -il C:\\Users\\PASCAL~1\\AppData\\Local\\Temp\\_CL_c4ec040bast -typedil -f main.cpp -W 1 -Ze -D_MSC_EXTENSIONS -Zp8 -Gs -pc \\:/ -D_MSC_VER=1925 -D_MSC_FULL_VER=192528610 -D_MSC_BUILD=4 -D_WIN32 -D_M_IX86=600 -D_M_IX86_FP=2 -GR -D_CPPRTTI -nologo -Wall -W4 -WX -diagnostics:column -D_GUARDOVERFLOW_CRT_ALLOCATORS=1 -Ot -DCODE_ANALYSIS -D_DEBUG -D_CONSOLE -D_UNICODE -DUNICODE -EHs -D_CPPUNWIND -EHc -D__MSVC_RUNTIME_CHECKS -RTCs -RTCu -MDd -D_DEBUG -D_MT -D_DLL -GS -D_M_FP_PRECISE -permissive- -Zc:wchar_t -Zc:forScope -std:c++latest -FoDebug\\main.obj -FdDebug\\vc142.pdb -Gd -analyze:projectdirectory E:\\GitHub\\container_base\\ -analyze:rulesetdirectory ;M:\\VisualStudio 2019\\Team Tools\\Static Analysis Tools\\\\Rule Sets; -analyze:ruleset ..\\privateRepo\\msvc.ruleset -analyze:quiet -analyze:plugin M:\\VisualStudio 2019\\VC\\Tools\\MSVC\\14.25.28610\\bin\\HostX86\\x86\\EspXEngine.dll -FC -errorreport:prompt -wd 4191 -wd 4255 -wd 4263 -wd 4264 -wd 4265 -wd 4266 -wd 4287 -wd 4296 -wd 4339 -wd 4342 -wd 4350 -wd 4365 -wd 4370 -wd 4371 -wd 4412 -wd 4426 -wd 4435 -wd 4437 -wd 4444 -wd 4464 -wd 4471 -wd 4472 -wd 4514 -wd 4547 -wd 4548 -wd 4549 -wd 4555 -wd 4557 -wd 4571 -wd 4574 -wd 4577 -wd 4587 -wd 4588 -wd 4598 -wd 4599 -wd 4605 -wd 4608 -wd 4623 -wd 4625 -wd 4626 -wd 4628 -wd 4640 -wd 4647 -wd 4654 -wd 4668 -wd 4682 -wd 4686 -wd 4692 -wd 4710 -wd 4738 -wd 4746 -wd 4749 -wd 4767 -wd 4768 -wd 4777 -wd 4786 -wd 4820 -wd 4822 -wd 4826 -wd 4841 -wd 4842 -wd 4917 -wd 4928 -wd 4931 -wd 4946 -wd 4962 -wd 4986 -wd 4987 -wd 4988 -wd 5022 -wd 5023 -wd 5024 -wd 5025 -wd 5026 -wd 5027 -wd 5029 -wd 5031 -wd 5032 -wd 5034 -wd 5035 -wd 5036 -wd 5038 -wd 5039 -wd 5042 -wd 5045 -I M:\\VisualStudio 2019\\VC\\Tools\\MSVC\\14.25.28610\\include -I M:\\VisualStudio 2019\\VC\\Tools\\MSVC\\14.25.28610\\atlmfc\\include -I M:\\VisualStudio 2019\\VC\\Auxiliary\\VS\\include -I C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\ucrt -I C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um -I C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\shared -I C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\winrt -I C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\cppwinrt -I C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.8\\Include\\um",
          "executionSuccessful": true,
          "ruleConfigurationOverrides": []
        }
      ],
      "artifacts": [
        {
          "location": {
            "uri": "file:///e:/github/container_base/iterator_base.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///e:/github/container_base/main.cpp"
          },
          "roles": [
            "analysisTarget",
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///e:/github/container_base/container_base.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///e:/github/container_base/testcontainer.hpp"
          },
          "roles": [
            "resultFile"
          ]
        }
      ]
    }
  ]
}