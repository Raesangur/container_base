<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>40</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class pel::iterator_base&lt;int&gt;', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::{dtor}</FUNCTION>
    <DECORATED>??1?$iterator_base@H@pel@@UAE@XZ</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>testContainer.hpp</FILENAME>
      <LINE>68</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>pel::testContainer&lt;int&gt;::[]</FUNCTION>
    <DECORATED>??A?$testContainer@H@pel@@UBEABHI@Z</DECORATED>
    <FUNCLINE>66</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>testContainer.hpp</FILENAME>
      <LINE>62</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>pel::testContainer&lt;int&gt;::[]</FUNCTION>
    <DECORATED>??A?$testContainer@H@pel@@UAEAAHI@Z</DECORATED>
    <FUNCLINE>60</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>testContainer.hpp</FILENAME>
      <LINE>33</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>pel::testContainer&lt;int&gt;::at</FUNCTION>
    <DECORATED>?at@?$testContainer@H@pel@@UBEABHI@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>testContainer.hpp</FILENAME>
      <LINE>27</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>pel::testContainer&lt;int&gt;::at</FUNCTION>
    <DECORATED>?at@?$testContainer@H@pel@@UAEAAHI@Z</DECORATED>
    <FUNCLINE>25</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>testContainer.hpp</FILENAME>
      <LINE>19</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26443</DEFECTCODE>
    <DESCRIPTION>Overriding destructor should not use explicit 'override' or 'virtual' specifiers (c.128).</DESCRIPTION>
    <FUNCTION>pel::testContainer&lt;int&gt;::{dtor}</FUNCTION>
    <DECORATED>??1?$testContainer@H@pel@@UAE@XZ</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>testContainer.hpp</FILENAME>
      <LINE>19</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class pel::testContainer&lt;int&gt;', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>pel::testContainer&lt;int&gt;::{dtor}</FUNCTION>
    <DECORATED>??1?$testContainer@H@pel@@UAE@XZ</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>testContainer.hpp</FILENAME>
      <LINE>17</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>pel::testContainer&lt;int&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$testContainer@H@pel@@QAE@XZ</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>42</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'pel::iterator_base&lt;int&gt;::iterator_base&lt;int&gt;' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$iterator_base@H@pel@@QAE@PAH@Z</DECORATED>
    <FUNCLINE>42</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>container_base.h</FILENAME>
      <LINE>23</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class pel::container_base&lt;int&gt;', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>pel::container_base&lt;int&gt;::{dtor}</FUNCTION>
    <DECORATED>??1?$container_base@H@pel@@MAE@XZ</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>container_base.h</FILENAME>
      <LINE>23</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26436</DEFECTCODE>
    <DESCRIPTION>The type 'class pel::container_base&lt;int&gt;' with a virtual function needs either public virtual or protected non-virtual destructor (c.35).</DESCRIPTION>
    <FUNCTION>pel::container_base&lt;int&gt;::{dtor}</FUNCTION>
    <DECORATED>??1?$container_base@H@pel@@MAE@XZ</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>164</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::+</FUNCTION>
    <DECORATED>??H?$iterator_base@H@pel@@UBE?AV01@H@Z</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>164</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::+</FUNCTION>
    <DECORATED>??H?$iterator_base@H@pel@@UBE?AV01@H@Z</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>180</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'temp' in call to 'pel::iterator_base&lt;int&gt;::iterator_base&lt;int&gt;' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::++</FUNCTION>
    <DECORATED>??E?$iterator_base@H@pel@@UAE?AV01@H@Z</DECORATED>
    <FUNCLINE>176</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>178</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>178</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(*this)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::++</FUNCTION>
    <DECORATED>??E?$iterator_base@H@pel@@UAE?AV01@H@Z</DECORATED>
    <FUNCLINE>176</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>178</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>178</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(*(return value))' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::++</FUNCTION>
    <DECORATED>??E?$iterator_base@H@pel@@UAE?AV01@H@Z</DECORATED>
    <FUNCLINE>176</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>178</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>180</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>176</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'pel::iterator_base&lt;int&gt;::operator++' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::++</FUNCTION>
    <DECORATED>??E?$iterator_base@H@pel@@UAE?AV01@H@Z</DECORATED>
    <FUNCLINE>176</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::++</FUNCTION>
    <DECORATED>??E?$iterator_base@H@pel@@UAE?AV01@H@Z</DECORATED>
    <FUNCLINE>176</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>169</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(*this)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::++</FUNCTION>
    <DECORATED>??E?$iterator_base@H@pel@@UAE?AV01@XZ</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>169</LINE>
        <COLUMN>25</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>172</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>169</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(*(return value))' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::++</FUNCTION>
    <DECORATED>??E?$iterator_base@H@pel@@UAE?AV01@XZ</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>169</LINE>
        <COLUMN>25</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>172</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>169</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'pel::iterator_base&lt;int&gt;::operator++' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::++</FUNCTION>
    <DECORATED>??E?$iterator_base@H@pel@@UAE?AV01@XZ</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>171</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::++</FUNCTION>
    <DECORATED>??E?$iterator_base@H@pel@@UAE?AV01@XZ</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>185</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(*this)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::+=</FUNCTION>
    <DECORATED>??Y?$iterator_base@H@pel@@UAE?AV01@H@Z</DECORATED>
    <FUNCLINE>185</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>185</LINE>
        <COLUMN>25</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>188</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>185</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(*(return value))' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::+=</FUNCTION>
    <DECORATED>??Y?$iterator_base@H@pel@@UAE?AV01@H@Z</DECORATED>
    <FUNCLINE>185</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>185</LINE>
        <COLUMN>25</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>188</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>185</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'pel::iterator_base&lt;int&gt;::operator+=' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::+=</FUNCTION>
    <DECORATED>??Y?$iterator_base@H@pel@@UAE?AV01@H@Z</DECORATED>
    <FUNCLINE>185</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>187</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::+=</FUNCTION>
    <DECORATED>??Y?$iterator_base@H@pel@@UAE?AV01@H@Z</DECORATED>
    <FUNCLINE>185</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>195</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::-</FUNCTION>
    <DECORATED>??G?$iterator_base@H@pel@@UBE?AV01@H@Z</DECORATED>
    <FUNCLINE>193</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>195</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::-</FUNCTION>
    <DECORATED>??G?$iterator_base@H@pel@@UBE?AV01@H@Z</DECORATED>
    <FUNCLINE>193</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>211</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 0 'temp' in call to 'pel::iterator_base&lt;int&gt;::iterator_base&lt;int&gt;' may be invalid (lifetime.3).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::--</FUNCTION>
    <DECORATED>??F?$iterator_base@H@pel@@UAE?AV01@H@Z</DECORATED>
    <FUNCLINE>207</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>209</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>209</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(*this)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::--</FUNCTION>
    <DECORATED>??F?$iterator_base@H@pel@@UAE?AV01@H@Z</DECORATED>
    <FUNCLINE>207</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>209</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>209</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(*(return value))' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::--</FUNCTION>
    <DECORATED>??F?$iterator_base@H@pel@@UAE?AV01@H@Z</DECORATED>
    <FUNCLINE>207</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>209</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>211</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>207</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'pel::iterator_base&lt;int&gt;::operator--' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::--</FUNCTION>
    <DECORATED>??F?$iterator_base@H@pel@@UAE?AV01@H@Z</DECORATED>
    <FUNCLINE>207</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>210</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::--</FUNCTION>
    <DECORATED>??F?$iterator_base@H@pel@@UAE?AV01@H@Z</DECORATED>
    <FUNCLINE>207</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>200</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(*this)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::--</FUNCTION>
    <DECORATED>??F?$iterator_base@H@pel@@UAE?AV01@XZ</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>25</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>203</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>200</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(*(return value))' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::--</FUNCTION>
    <DECORATED>??F?$iterator_base@H@pel@@UAE?AV01@XZ</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>25</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>203</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>200</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'pel::iterator_base&lt;int&gt;::operator--' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::--</FUNCTION>
    <DECORATED>??F?$iterator_base@H@pel@@UAE?AV01@XZ</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>202</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::--</FUNCTION>
    <DECORATED>??F?$iterator_base@H@pel@@UAE?AV01@XZ</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>215</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(*this)' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::-=</FUNCTION>
    <DECORATED>??Z?$iterator_base@H@pel@@UAE?AV01@H@Z</DECORATED>
    <FUNCLINE>215</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>215</LINE>
        <COLUMN>25</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>215</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer '(*(return value))' that may be invalid (lifetime.4).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::-=</FUNCTION>
    <DECORATED>??Z?$iterator_base@H@pel@@UAE?AV01@H@Z</DECORATED>
    <FUNCLINE>215</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>215</LINE>
        <COLUMN>25</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>E:\GitHub\container_base\</FILEPATH>
        <FILENAME>iterator_base.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>215</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'pel::iterator_base&lt;int&gt;::operator-=' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::-=</FUNCTION>
    <DECORATED>??Z?$iterator_base@H@pel@@UAE?AV01@H@Z</DECORATED>
    <FUNCLINE>215</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\GitHub\container_base\</FILEPATH>
      <FILENAME>iterator_base.h</FILENAME>
      <LINE>217</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>pel::iterator_base&lt;int&gt;::-=</FUNCTION>
    <DECORATED>??Z?$iterator_base@H@pel@@UAE?AV01@H@Z</DECORATED>
    <FUNCLINE>215</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>